apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    team: {{ .Values.project.team }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        name: {{ .Release.Name }}-web
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: {{ .Release.Name }}
        #image: "410196150672.dkr.ecr.cn-north-1.amazonaws.com.cn/oral3@sha256:2d2bd1ad823f029cedc67471674ac760d70940a7d6291d26edd70762a9b62fd7"
        #image: "410196150672.dkr.ecr.cn-northwest-1.amazonaws.com.cn/app-yw@sha256:d6f976a5fb9687b021be78de94e44e6acb1e4b60d79f9f499436e62d84bfc177"
        image: "{{ .Values.images.rails.repository }}:{{ .Values.images.rails.tag }}"
        imagePullPolicy: {{ .Values.images.rails.pullPolicy }}
        #args: ['tail', '-f', '/dev/null']
        args: ['bundle', 'exec', 'puma', '-C', '/app/config/puma.rb']
        # args:
        #   {{- range .Values.images.rails.command }}
        #     - {{ . }}
        #   {{- end }}
        volumeMounts:
        - name: tmp-vol
          mountPath: /app/tmp
        - name: public-vol
          mountPath: /public
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-env
      {{  if .Values.app.reverse_proxy }}
      - name: {{ .Release.Name }}-nginx
        image: "{{ .Values.images.reverse_proxy.repository }}:{{ .Values.images.reverse_proxy.tag }}"
        imagePullPolicy: {{ .Values.images.reverse_proxy.pullPolicy }}
        args: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - name: tmp-vol
          mountPath: /app/tmp
        - name: public-vol
          mountPath: /public
          readOnly: true
      {{ end }}
      volumes:
      - name: tmp-vol
        emptyDir: {}
      - name: public-vol
        emptyDir: {}
